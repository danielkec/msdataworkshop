apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orderandinventoryadmin
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: orderandinventoryadmin
        version: helidon
    spec:
      # The credential files in the secret are base64 encoded twice and hence they need to be decoded for the programs to use them.
      # This decode-creds initContainer takes care of decoding the files and writing them to a shared volume from which jdbc-app contianer
      # can read them and use it for connecting to ATP.
      initContainers:
      - name: decode-creds-order
        command:
        - bash
        - -c
        - "for i in `ls -1 /tmp/creds | grep -v user_name`; do cat /tmp/creds/$i  | base64 --decode > /creds/$i; done; ls -l /creds/*;"
        image: oraclelinux:7.5
        volumeMounts:
        - name: creds-raw
          mountPath: /tmp/creds
          readOnly: false
        - name: creds
          mountPath: /creds
      - name: decode-creds-inventory
        command:
        - bash
        - -c
        - "for i in `ls -1 /tmp/creds-inventory | grep -v user_name`; do cat /tmp/creds-inventory/$i  | base64 --decode > /creds-inventory/$i; done; ls -l /creds-inventory/*;"
        image: oraclelinux:7.5
        volumeMounts:
        - name: creds-raw-inventory
          mountPath: /tmp/creds-inventory
          readOnly: false
        - name: creds-inventory
          mountPath: /creds-inventory
      containers:
      - name: helidonatp
        image: us-phoenix-1.ocir.io/stevengreenberginc/paul.parkinson/msdataworkshop/helidonatp:0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        # orderpdb...
        - name: oracle.ucp.jdbc.PoolDataSource.atp1.user
          value: "admin"
        - name: oracle.ucp.jdbc.PoolDataSource.atp1.password
          valueFrom:
            secretKeyRef:
              name: atp-user-cred-orderadmin
              key: password
        - name: oracle.ucp.jdbc.PoolDataSource.atp1.URL
          value: "jdbc:oracle:thin:@db202002011726_high?TNS_ADMIN=/msdataworkshop/creds"
        - name: WALLET_PWD
          valueFrom:
            secretKeyRef:
              name: atp-user-cred-orderadmin
              key: walletPassword
        # inventorypdb...
        - name: oracle.ucp.jdbc.PoolDataSource.inventorypdb.user
          value: "admin"
        - name: oracle.ucp.jdbc.PoolDataSource.inventorypdb.password
          valueFrom:
            secretKeyRef:
              name: atp-user-cred-inventoryadmin
              key: password
        - name: oracle.ucp.jdbc.PoolDataSource.inventorypdb.URL
          value: "jdbc:oracle:thin:@inventorydb_high?TNS_ADMIN=/msdataworkshop/creds"
        - name: WALLET_PWD
          valueFrom:
            secretKeyRef:
              name: atp-user-cred-orderadmin
              key: walletPassword
        volumeMounts:
        - name: creds
          mountPath: /msdataworkshop/creds
        - name: creds-inventory
          mountPath: /msdataworkshop/creds-inventory
      volumes:
      - name: creds-raw
        secret:
          secretName: atp-demo-binding-order
      - name: creds
        emptyDir: {}
      - name: creds-raw-inventory
        secret:
          secretName: atp-demo-binding-inventory
      - name: creds-inventory
        emptyDir: {}