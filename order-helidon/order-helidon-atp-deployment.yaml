apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: order-helidon
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: order
        version: helidon-mp
    spec:
      initContainers:
      - name: decode-creds
        command:
        - bash
        - -c
        - "for i in `ls -1 /tmp/creds | grep -v user_name`; do cat /tmp/creds/$i  | base64 --decode > /creds/$i; done; ls -l /creds/*;"
        image: oraclelinux:7.5
        volumeMounts:
        - name: creds-raw
          mountPath: /tmp/creds
          readOnly: false
        - name: creds
          mountPath: /creds
      - name: decode-creds-order
        command:
        - bash
        - -c
        - "for i in `ls -1 /tmp/creds-order | grep -v user_name`; do cat /tmp/creds-order/$i  | base64 --decode > /creds-order/$i; done; ls -l /creds-order/*;"
        image: oraclelinux:7.5
        volumeMounts:
        - name: creds-raw-order
          mountPath: /tmp/creds-order
          readOnly: false
        - name: creds-order
          mountPath: /creds-order
      containers:
      - name: order
        image: us-phoenix-1.ocir.io/stevengreenberginc/paul.parkinson/msdataworkshop/order-helidon:0.1
        imagePullPolicy: Always
        env:
        - name: oracle.ucp.jdbc.PoolDataSource.atp1.user
          value: "demouser" # todo change to orderuser when using propagation
        - name: oracle.ucp.jdbc.PoolDataSource.atp1.password
          valueFrom:
            secretKeyRef:
              name: atp-user-cred-orderuser
              key: password
        - name: oracle.ucp.jdbc.PoolDataSource.atp1.URL
          value: "jdbc:oracle:thin:@db202002011726_high?TNS_ADMIN=/db-demo/creds"
        - name: orderqueuename
          value: "orderqueue"
        - name: WALLET_PWD
          valueFrom:
            secretKeyRef:
              name: atp-user-cred-orderuser
              key: walletPassword
        - name: tenancyName
          valueFrom:
            secretKeyRef:
              name: orderstream-cred
              key: tenancyName
        - name: username
          valueFrom:
            secretKeyRef:
              name: orderstream-cred
              key: username
        - name: streamPoolId
          valueFrom:
            secretKeyRef:
              name: orderstream-cred
              key: streamPoolId
        - name: authToken
          valueFrom:
            secretKeyRef:
              name: orderstream-cred
              key: authToken
        - name: topicName
          valueFrom:
            secretKeyRef:
              name: orderstream-cred
              key: topicName
        volumeMounts:
        - name: creds
          mountPath: /db-demo/creds
        - name: creds-order
          mountPath: /db-demo/creds-order
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet: #alternatives include exec with command, etc.
            path: /health/live
            port: 8080
          initialDelaySeconds: 20
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 40
      restartPolicy: Always
      volumes:
      - name: creds-raw
        secret:
          secretName: atp-demo-binding
      - name: creds
        emptyDir: {}
