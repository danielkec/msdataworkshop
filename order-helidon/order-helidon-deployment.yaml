apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: order-helidon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
        version: helidon-mp
    spec:
      initContainers:
      - name: decode-creds
        command:
        - bash
        - -c
        - "for i in `ls -1 /tmp/creds | grep -v user_name`; do cat /tmp/creds/$i  | base64 --decode > /creds/$i; done; ls -l /creds/*;"
        image: oraclelinux:7.5
        volumeMounts:
        - name: creds-raw
          mountPath: /tmp/creds
          readOnly: false
        - name: creds
          mountPath: /creds
      containers:
      - name: order
        image: %DOCKER_REGISTRY%/order-helidon:0.1
        imagePullPolicy: Always
        env:
        - name: oracle.ucp.jdbc.PoolDataSource.orderpdb.user
          value: "ORDERUSER"
        - name: oracle.ucp.jdbc.PoolDataSource.orderpdb.password
          valueFrom:
            secretKeyRef:
              name: atp-user-cred-orderuser
              key: password
        - name: oracle.ucp.jdbc.PoolDataSource.orderpdb.URL
          value: "jdbc:oracle:thin:@orderdb_high?TNS_ADMIN=/msdataworkshop/creds"
        - name: orderqueuename
          value: "orderqueue"
        - name: inventoryqueuename
          value: "inventoryqueue"
        - name: WALLET_PWD
          valueFrom:
            secretKeyRef:
              name: atp-user-cred-orderuser
              key: walletPassword
# Task 12 (Demonstrate OKE horizontal pod scaling)
#        resources:
#          requests:
#            cpu: "200m"
#          limits:
#            cpu: "500m"
# Task 10 (OSS streaming service)
#        - name: tenancyName
#          valueFrom:
#            secretKeyRef:
#              name: orderstream-cred
#              key: tenancyName
#        - name: username
#          valueFrom:
#            secretKeyRef:
#              name: orderstream-cred
#              key: username
#        - name: streamPoolId
#          valueFrom:
#            secretKeyRef:
#              name: orderstream-cred
#              key: streamPoolId
#        - name: authToken
#          valueFrom:
#            secretKeyRef:
#              name: orderstream-cred
#              key: authToken
#        - name: topicName
#          valueFrom:
#            secretKeyRef:
#              name: orderstream-cred
#              key: topicName
        volumeMounts:
        - name: creds
          mountPath: /msdataworkshop/creds
        ports:
        - containerPort: 8080
# Task 11 (Helidon/OKE health liveness/readiness)
        livenessProbe:
          httpGet: #alternatives include exec with command, etc.
            path: /health/live
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 3
      restartPolicy: Always
      volumes:
      - name: creds-raw
        secret:
          secretName: atp-demo-binding-order
      - name: creds
        emptyDir: {}
